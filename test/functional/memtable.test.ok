init
set workers to 0
set interval to 10
set serial to false
set uuid to '00000000-0000-0000-0000-000000000000'
open
# test: insert
show partitions debug
[]
insert 1
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 1,
  "events_heap": 1,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: cursor (no key)
cursor c
read c
[1]
next c
(eof)
read c
(eof)
cursor_close c
# test: cursor (min)
cursor c 0
read c
[1]
next c
(eof)
read c
(eof)
cursor_close c
# test: cursor (point lookup)
cursor c 1
read c
[1]
next c
(eof)
read c
(eof)
cursor_close c
# test: cursor (out of range)
cursor c 2
read c
(eof)
next c
(eof)
read c
(eof)
cursor_close c
cursor c 12
read c
(eof)
next c
(eof)
read c
(eof)
cursor_close c
# test: insert #2
insert 0
insert 2
insert 3
insert 5
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 5,
  "events_heap": 5,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: select (no key)
select
[0]
[1]
[2]
[3]
[5]
(eof)
# test: select (min)
select 0
[0]
[1]
[2]
[3]
[5]
(eof)
# test: select (point lookup)
select 2
[2]
[3]
[5]
(eof)
# test: select (next after)
select 4
[5]
(eof)
# test: select (out of range)
select 6
(eof)
select 12
(eof)
# test: insert #3 (replace by key)
insert 0 x
insert 3 x
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 5,
  "events_heap": 5,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: select
select
[0, x]
[1]
[2]
[3, x]
[5]
(eof)
select 0
[0, x]
[1]
[2]
[3, x]
[5]
(eof)
select 2
[2]
[3, x]
[5]
(eof)
select 3
[3, x]
[5]
(eof)
# test: update by cursor
cursor c 2
insert 2 y
cursor_close c
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 5,
  "events_heap": 5,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: select
select
[0, x]
[1]
[2, y]
[3, x]
[5]
(eof)
select 0
[0, x]
[1]
[2, y]
[3, x]
[5]
(eof)
select 2
[2, y]
[3, x]
[5]
(eof)
select 3
[3, x]
[5]
(eof)
# test: delete by key (open case)
delete 0
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 5,
  "events_heap": 5,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: select
select
[1]
[2, y]
[3, x]
[5]
(eof)
# test: delete by key
delete 3
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 5,
  "events_heap": 5,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: select
select
[1]
[2, y]
[5]
(eof)
# test: delete by cursor
cursor c 2
delete 2
read c
(eof)
next c
read c
[5]
next c
(eof)
cursor_close c
# test: select
select
[1]
[5]
(eof)
# test: delete all
cursor c
read c
[1]
delete 1
read c
(eof)
next c
read c
[5]
delete 5
read c
(eof)
next c
(eof)
cursor_close c
# test: select
select
(eof)
select 0
(eof)
select 2
(eof)
select 3
(eof)
select 5
(eof)
select 8
(eof)
# test: create partition
drop partition 0
insert 1
insert 2
insert 4
show partitions debug
[{
  "min": 0,
  "max": 9,
  "created": "(filtered)",
  "refreshes": 0,
  "events": 3,
  "events_heap": 3,
  "regions": 0,
  "size": 0,
  "size_uncompressed": 0,
  "size_heap": 2097152,
  "on_storage": false,
  "on_cloud": false,
  "storage": "main",
  "index": null
}]
# test: cursor
cursor c 2
read c
[2]
# test: insert at cursor pos
insert 2 xxx
read c
[2, xxx]
# test: insert before cursor pos
insert 0 xxx
read c
[2, xxx]
# test: insert after cursor pos
insert 3 xxx
read c
[2, xxx]
next c
read c
[3, xxx]
# test: delete at cursor pos
delete 3 zzz
read c
(eof)
next c
read c
[4]
# test: second cursor
select
[0, xxx]
[1]
[2, xxx]
[4]
(eof)
cursor_close c
close
