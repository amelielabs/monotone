init
set workers to 0
set workers_upload to 0
set interval to 10
set serial to false
set uuid to '00000000-0000-0000-0000-000000000000'
set config_sync to false
open
# test: drop cloud parsing
drop
error: DROP 'STORAGE|PARTITION|PARTITIONS' expected
drop cloud
error: DROP CLOUD 'name' expected
drop cloud if
error: IF 'EXISTS' expected
drop cloud if 123
error: IF 'EXISTS' expected
drop cloud if not
error: IF 'EXISTS' expected
drop cloud if exists
error: DROP CLOUD 'name' expected
drop cloud if exists 123
error: DROP CLOUD 'name' expected
drop cloud 123
error: DROP CLOUD 'name' expected
# test: drop cloud
create cloud test (type 'mock')
show clouds
{
  "test": {
    "name": "test",
    "type": "mock",
    "login": "",
    "password": "(secret)",
    "url": "",
    "debug": false
  }
}
drop cloud test
show clouds
{
}
# test: drop cloud (does not exists)
drop cloud test
error: cloud 'test': not exists
# test: drop cloud if exists
drop cloud if exists test
# test: create storage (with cloud)
create cloud s3 (type 'mock')
create storage test (cloud 's3')
show storages debug
{
  "main": {
    "config": {
      "uuid": "(filtered)",
      "name": "main",
      "path": "",
      "cloud": "",
      "cloud_drop_local": true,
      "sync": true,
      "crc": false,
      "refresh_wm": 41943040,
      "region_size": 131072,
      "compression": "",
      "compression_level": 0,
      "encryption": ""
    },
    "stats": {
      "min": 0,
      "max": 0,
      "partitions": 0,
      "partitions_local": 0,
      "partitions_cloud": 0,
      "regions": 0,
      "events": 0,
      "events_heap": 0,
      "size": 0,
      "size_uncompressed": 0,
      "size_heap": 0
    }
  },
  "test": {
    "config": {
      "uuid": "(filtered)",
      "name": "test",
      "path": "",
      "cloud": "s3",
      "cloud_drop_local": true,
      "sync": true,
      "crc": false,
      "refresh_wm": 41943040,
      "region_size": 131072,
      "compression": "",
      "compression_level": 0,
      "encryption": ""
    },
    "stats": {
      "min": 0,
      "max": 0,
      "partitions": 0,
      "partitions_local": 0,
      "partitions_cloud": 0,
      "regions": 0,
      "events": 0,
      "events_heap": 0,
      "size": 0,
      "size_uncompressed": 0,
      "size_heap": 0
    }
  }
}
# test: drop cloud (with storage)
drop cloud s3
error: cloud 's3': has dependencies
show clouds
{
  "s3": {
    "name": "s3",
    "type": "mock",
    "login": "",
    "password": "(secret)",
    "url": "",
    "debug": false
  }
}
# test: drop cloud (with storage) #2
drop storage test
show storages debug
{
  "main": {
    "config": {
      "uuid": "(filtered)",
      "name": "main",
      "path": "",
      "cloud": "",
      "cloud_drop_local": true,
      "sync": true,
      "crc": false,
      "refresh_wm": 41943040,
      "region_size": 131072,
      "compression": "",
      "compression_level": 0,
      "encryption": ""
    },
    "stats": {
      "min": 0,
      "max": 0,
      "partitions": 0,
      "partitions_local": 0,
      "partitions_cloud": 0,
      "regions": 0,
      "events": 0,
      "events_heap": 0,
      "size": 0,
      "size_uncompressed": 0,
      "size_heap": 0
    }
  }
}
drop cloud s3
show clouds
{
}
close
